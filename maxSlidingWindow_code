#include <stdio.h>
#include <stdlib.h>

int* maxSlidingWindow(int* nums, int numsSize, int k, int* returnSize) {
    int* out = (int*)malloc((numsSize - k + 1) * sizeof(int));
    int front = 0, rear = 0;
    int* maxQueue = (int*)malloc(numsSize * sizeof(int));

    for (int i = 0; i < numsSize; i++) {
        while (front < rear && maxQueue[rear - 1] < nums[i]) {
            rear--;
        }
        maxQueue[rear++] = nums[i];

        if (i >= k - 1) {
            out[i - k + 1] = maxQueue[front];

            if (maxQueue[front] == nums[i - k + 1]) {
                front++;
            }
        }
    }

    *returnSize = numsSize - k + 1;
    free(maxQueue);
    return out;
}

int main() {
    int numsSize, k;

    printf("Enter the size of the array: ");
    scanf("%d", &numsSize);

    int* nums = (int*)malloc(numsSize * sizeof(int));
    printf("Enter the elements of the array: ");
    for (int i = 0; i < numsSize; i++) {
        scanf("%d", &nums[i]);
    }

    printf("Enter the value of k: ");
    scanf("%d", &k);

    int returnSize;
    int* result = maxSlidingWindow(nums, numsSize, k, &returnSize);

    printf("Sliding window maximums: ");
    for (int i = 0; i < returnSize; i++) {
        printf("%d ", result[i]);
    }
    printf("\n");

    free(nums);
    free(result);
    return 0;
}
